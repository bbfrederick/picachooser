[build-system]
requires = ['setuptools>=42', 'cffi>=1.0.0', 'versioneer[toml]==0.29']
build-backend = 'setuptools.build_meta'

[project]
name = 'picachooser'
description = 'Lightweight GUI for sorting, classifying, and matching MELODIC ICA components.'
keywords = ['fMRI', 'ICA', 'component matching', 'visualization']
license = {text = 'Apache Software License'}
readme = 'README.rst'
classifiers = [
    'Operating System :: OS Independent',
    'Development Status :: 5 - Production/Stable',
    'Intended Audience :: Science/Research',
    'Topic :: Scientific/Engineering :: Image Recognition',
    'License :: OSI Approved :: Apache Software License',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
]
requires-python = '>=3.9'
dependencies = [
  'numpy',
  'scipy',
  'pandas',
  'nibabel',
  'pyqtgraph>=0.13.4',
  'pyqt6-sip',
  'pyqt6',
  'pillow',
]
dynamic = ['version']
authors = [
  { name='Blaise Frederick', email='blaise.frederick@gmail.com' },
]

[project.urls]
'Homepage' = 'https://github.com/bbfrederick/picachooser'
'Bug Tracker' = 'https://github.com/bbfrederick/picachooser/issues'
'Repository' = 'https://github.com/bbfrederick/picachooser.git'
'Documentation' = 'https://picachooser.readthedocs.io'
'Changelog' = 'https://github.com/bbfrederick/picachooser/blob/main/CHANGELOG.md'

[project.optional-dependencies]
test = [
  'codecov',
  'coverage',
  'coveralls',
  'flake8-black',
  'pytest',
  'pytest-cov',
]
doc = [
  'sphinx',
  'sphinx_rtd_theme',
  'sphinx-argparse',
  'sphinx-gallery',
  'myst-parser',
  'numpydoc',
  'sphinxcontrib-bibtex',
  'tomlkit',
]

[project.scripts]
PICAchooser = 'picachooser.scripts.PICAchooser:entrypoint'
PICAchooser_dispatcher = 'picachooser.scripts.PICAchooser_dispatcher:entrypoint'
grader = 'picachooser.scripts.grader:entrypoint'
melodicomp = 'picachooser.scripts.melodicomp:entrypoint'
rtgrader = 'picachooser.scripts.rtgrader:entrypoint'

[tool.setuptools]
include-package-data = true 

[tool.setuptools.packages.find]
include = ['picachooser']

[tool.setuptools.package-data]
picachooser = ['picachooser/*.py', 'picachooser/scripts/*']

[tool.setuptools.dynamic]
version = {attr = 'picachooser.__version__'}

[tool.setuptools.exclude-package-data]
picachooser = ['.eggs', '.git', '.github', '.pytest_cache']

# Aliases
docs = ['picachooser[doc]']
tests = ['picachooser[test]']
all = ['picachooser[docs,tests]']

[tool.black]
line-length = 99
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.github
    | \.hg
    | \.pytest_cache
    | _build
    | build
    | dist
  )/
  | get_version.py
  | versioneer.py
  | picachooser/_version.py
)
'''

[tool.isort]
profile = 'black'
multi_line_output = 3

[tool.versioneer]
VCS = 'git'
style = 'pep440'
versionfile_source = 'picachooser/_version.py'
versionfile_build = 'picachooser/_version.py'
tag_prefix = 'v'
parentdir_prefix = 'picachooser-'

[tool.codespell]
# Ref: https://github.com/codespell-project/codespell#using-a-config-file
skip = '.git*,versioneer.py,*.css,exportlist.txt,data,*.bib'
check-hidden = true
ignore-regex = '\bsubjeT\b'
ignore-words-list = 'thex,normall'
